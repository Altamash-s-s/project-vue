{"version":3,"sources":["webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/node-libs-browser/node_modules/buffer/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/image-meta/dist/index.cjs"],"names":["toString","module","exports","Array","isArray","arr","call","base64","ieee754","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","length","RangeError","Uint8Array","__proto__","prototype","arg","encodingOrOffset","this","Error","allocUnsafe","from","value","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","len","checked","copy","buffer","val","type","data","fromObject","assertSize","size","i","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","n","m","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","push","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","fromByteArray","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","e","typedArraySupport","poolSize","_augment","Symbol","species","Object","defineProperty","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","abs","log","LN2","BMP","validate","calculate","height","width","getSizeFromOffset","getImageSize$1","imageIndex","ICO","nbImages","imageSize","imgs","images","CUR","DDS","gifRegexp","GIF","signature","test","ICON_TYPE_SIZE","ICON","icm4","icm8","ics4","ics8","is32","s8mk","icp4","icl4","icl8","il32","l8mk","icp5","ic11","ich4","ich8","ih32","h8mk","icp6","ic12","it32","t8mk","ic07","ic08","ic13","ic09","ic14","ic10","readImageHeader","imageOffset","imageLengthOffset","getImageSize","ICNS","bufferLength","fileLength","imageHeader","result","J2C","BoxTypes","parseIHDR","box","JP2","signatureLength","ftypeBoxStart","ftypBoxLength","unit","calculateRREQLength","readUInt","bits","isBigEndian","isEXIF","extractSize","index","validateExifBlock","exifBlock","byteAlign","EXIF_HEADER_BYTES","idfDirectoryEntries","directoryEntryNumber","block","extractOrientation","validateBuffer","JPG","orientation","next","KTX","pngFriedChunkName","PNG","chunkName","PNMTypes","P1","P2","P3","P4","P5","P6","P7","PF","Signatures","keys","handlers","default","lines","dimensions","line","shift","split","pam","key","svgReg","extractorRegExps","root","viewbox","INCH_CM","cm","em","ex","mm","pc","pt","parseLength","exec","round","parseFloat","parseViewbox","bounds","typeHandlers","bmp","cur","dds","gif","icns","ico","j2c","jp2","jpg","ktx","png","pnm","psd","svg","attrs","parseAttributes","calculateByDimensions","ratio","calculateByViewbox","webp","riffHeader","webpHeader","vp8Header","chunkHeader","extendedHeader","calculateExtended","calculateLossy","calculateLossless","firstBytes","filepath","byte","find","detector","mimeType","getMimeType","types","imageMeta","input"],"mappings":"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","file":"21058e4.js","sourcesContent":["var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst BMP = {\n  validate(buffer) {\n    return buffer.toString(\"ascii\", 0, 2) === \"BM\";\n  },\n  calculate(buffer) {\n    return {\n      height: Math.abs(buffer.readInt32LE(22)),\n      width: buffer.readUInt32LE(18)\n    };\n  }\n};\n\nconst TYPE_ICON = 1;\nconst SIZE_HEADER$1 = 2 + 2 + 2;\nconst SIZE_IMAGE_ENTRY = 1 + 1 + 1 + 1 + 2 + 2 + 4 + 4;\nfunction getSizeFromOffset(buffer, offset) {\n  const value = buffer.readUInt8(offset);\n  return value === 0 ? 256 : value;\n}\nfunction getImageSize$1(buffer, imageIndex) {\n  const offset = SIZE_HEADER$1 + imageIndex * SIZE_IMAGE_ENTRY;\n  return {\n    height: getSizeFromOffset(buffer, offset + 1),\n    width: getSizeFromOffset(buffer, offset)\n  };\n}\nconst ICO = {\n  validate(buffer) {\n    if (buffer.readUInt16LE(0) !== 0) {\n      return false;\n    }\n    return buffer.readUInt16LE(2) === TYPE_ICON;\n  },\n  calculate(buffer) {\n    const nbImages = buffer.readUInt16LE(4);\n    const imageSize = getImageSize$1(buffer, 0);\n    if (nbImages === 1) {\n      return imageSize;\n    }\n    const imgs = [imageSize];\n    for (let imageIndex = 1; imageIndex < nbImages; imageIndex += 1) {\n      imgs.push(getImageSize$1(buffer, imageIndex));\n    }\n    const result = {\n      height: imageSize.height,\n      images: imgs,\n      width: imageSize.width\n    };\n    return result;\n  }\n};\n\nconst TYPE_CURSOR = 2;\nconst CUR = {\n  validate(buffer) {\n    if (buffer.readUInt16LE(0) !== 0) {\n      return false;\n    }\n    return buffer.readUInt16LE(2) === TYPE_CURSOR;\n  },\n  calculate(buffer) {\n    return ICO.calculate(buffer);\n  }\n};\n\nconst DDS = {\n  validate(buffer) {\n    return buffer.readUInt32LE(0) === 542327876;\n  },\n  calculate(buffer) {\n    return {\n      height: buffer.readUInt32LE(12),\n      width: buffer.readUInt32LE(16)\n    };\n  }\n};\n\nconst gifRegexp = /^GIF8[79]a/;\nconst GIF = {\n  validate(buffer) {\n    const signature = buffer.toString(\"ascii\", 0, 6);\n    return gifRegexp.test(signature);\n  },\n  calculate(buffer) {\n    return {\n      height: buffer.readUInt16LE(8),\n      width: buffer.readUInt16LE(6)\n    };\n  }\n};\n\nconst SIZE_HEADER = 4 + 4;\nconst FILE_LENGTH_OFFSET = 4;\nconst ENTRY_LENGTH_OFFSET = 4;\nconst ICON_TYPE_SIZE = {\n  ICON: 32,\n  \"ICN#\": 32,\n  \"icm#\": 16,\n  icm4: 16,\n  icm8: 16,\n  \"ics#\": 16,\n  ics4: 16,\n  ics8: 16,\n  is32: 16,\n  s8mk: 16,\n  icp4: 16,\n  icl4: 32,\n  icl8: 32,\n  il32: 32,\n  l8mk: 32,\n  icp5: 32,\n  ic11: 32,\n  ich4: 48,\n  ich8: 48,\n  ih32: 48,\n  h8mk: 48,\n  icp6: 64,\n  ic12: 32,\n  it32: 128,\n  t8mk: 128,\n  ic07: 128,\n  ic08: 256,\n  ic13: 256,\n  ic09: 512,\n  ic14: 512,\n  ic10: 1024\n};\nfunction readImageHeader(buffer, imageOffset) {\n  const imageLengthOffset = imageOffset + ENTRY_LENGTH_OFFSET;\n  return [\n    buffer.toString(\"ascii\", imageOffset, imageLengthOffset),\n    buffer.readUInt32BE(imageLengthOffset)\n  ];\n}\nfunction getImageSize(type) {\n  const size = ICON_TYPE_SIZE[type];\n  return { width: size, height: size, type };\n}\nconst ICNS = {\n  validate(buffer) {\n    return buffer.toString(\"ascii\", 0, 4) === \"icns\";\n  },\n  calculate(buffer) {\n    const bufferLength = buffer.length;\n    const fileLength = buffer.readUInt32BE(FILE_LENGTH_OFFSET);\n    let imageOffset = SIZE_HEADER;\n    let imageHeader = readImageHeader(buffer, imageOffset);\n    let imageSize = getImageSize(imageHeader[0]);\n    imageOffset += imageHeader[1];\n    if (imageOffset === fileLength) {\n      return imageSize;\n    }\n    const result = {\n      height: imageSize.height,\n      images: [imageSize],\n      width: imageSize.width\n    };\n    while (imageOffset < fileLength && imageOffset < bufferLength) {\n      imageHeader = readImageHeader(buffer, imageOffset);\n      imageSize = getImageSize(imageHeader[0]);\n      imageOffset += imageHeader[1];\n      result.images.push(imageSize);\n    }\n    return result;\n  }\n};\n\nconst J2C = {\n  validate(buffer) {\n    return buffer.toString(\"hex\", 0, 4) === \"ff4fff51\";\n  },\n  calculate(buffer) {\n    return {\n      height: buffer.readUInt32BE(12),\n      width: buffer.readUInt32BE(8)\n    };\n  }\n};\n\nconst BoxTypes = {\n  ftyp: \"66747970\",\n  ihdr: \"69686472\",\n  jp2h: \"6a703268\",\n  jp__: \"6a502020\",\n  rreq: \"72726571\",\n  xml_: \"786d6c20\"\n};\nconst calculateRREQLength = (box) => {\n  const unit = box.readUInt8(0);\n  let offset = 1 + 2 * unit;\n  const numStdFlags = box.readUInt16BE(offset);\n  const flagsLength = numStdFlags * (2 + unit);\n  offset = offset + 2 + flagsLength;\n  const numVendorFeatures = box.readUInt16BE(offset);\n  const featuresLength = numVendorFeatures * (16 + unit);\n  return offset + 2 + featuresLength;\n};\nconst parseIHDR = (box) => {\n  return {\n    height: box.readUInt32BE(4),\n    width: box.readUInt32BE(8)\n  };\n};\nconst JP2 = {\n  validate(buffer) {\n    const signature = buffer.toString(\"hex\", 4, 8);\n    const signatureLength = buffer.readUInt32BE(0);\n    if (signature !== BoxTypes.jp__ || signatureLength < 1) {\n      return false;\n    }\n    const ftypeBoxStart = signatureLength + 4;\n    const ftypBoxLength = buffer.readUInt32BE(signatureLength);\n    const ftypBox = buffer.slice(ftypeBoxStart, ftypeBoxStart + ftypBoxLength);\n    return ftypBox.toString(\"hex\", 0, 4) === BoxTypes.ftyp;\n  },\n  calculate(buffer) {\n    const signatureLength = buffer.readUInt32BE(0);\n    const ftypBoxLength = buffer.readUInt16BE(signatureLength + 2);\n    let offset = signatureLength + 4 + ftypBoxLength;\n    const nextBoxType = buffer.toString(\"hex\", offset, offset + 4);\n    switch (nextBoxType) {\n      case BoxTypes.rreq:\n        const MAGIC = 4;\n        offset = offset + 4 + MAGIC + calculateRREQLength(buffer.slice(offset + 4));\n        return parseIHDR(buffer.slice(offset + 8, offset + 24));\n      case BoxTypes.jp2h:\n        return parseIHDR(buffer.slice(offset + 8, offset + 24));\n      default:\n        throw new TypeError(\"Unsupported header found: \" + buffer.toString(\"ascii\", offset, offset + 4));\n    }\n  }\n};\n\nfunction readUInt(buffer, bits, offset, isBigEndian) {\n  offset = offset || 0;\n  const endian = isBigEndian ? \"BE\" : \"LE\";\n  const methodName = \"readUInt\" + bits + endian;\n  return buffer[methodName].call(buffer, offset);\n}\n\nconst EXIF_MARKER = \"45786966\";\nconst APP1_DATA_SIZE_BYTES = 2;\nconst EXIF_HEADER_BYTES = 6;\nconst TIFF_BYTE_ALIGN_BYTES = 2;\nconst BIG_ENDIAN_BYTE_ALIGN = \"4d4d\";\nconst LITTLE_ENDIAN_BYTE_ALIGN = \"4949\";\nconst IDF_ENTRY_BYTES = 12;\nconst NUM_DIRECTORY_ENTRIES_BYTES = 2;\nfunction isEXIF(buffer) {\n  return buffer.toString(\"hex\", 2, 6) === EXIF_MARKER;\n}\nfunction extractSize(buffer, index) {\n  return {\n    height: buffer.readUInt16BE(index),\n    width: buffer.readUInt16BE(index + 2)\n  };\n}\nfunction extractOrientation(exifBlock, isBigEndian) {\n  const idfOffset = 8;\n  const offset = EXIF_HEADER_BYTES + idfOffset;\n  const idfDirectoryEntries = readUInt(exifBlock, 16, offset, isBigEndian);\n  for (let directoryEntryNumber = 0; directoryEntryNumber < idfDirectoryEntries; directoryEntryNumber++) {\n    const start = offset + NUM_DIRECTORY_ENTRIES_BYTES + directoryEntryNumber * IDF_ENTRY_BYTES;\n    const end = start + IDF_ENTRY_BYTES;\n    if (start > exifBlock.length) {\n      return;\n    }\n    const block = exifBlock.slice(start, end);\n    const tagNumber = readUInt(block, 16, 0, isBigEndian);\n    if (tagNumber === 274) {\n      const dataFormat = readUInt(block, 16, 2, isBigEndian);\n      if (dataFormat !== 3) {\n        return;\n      }\n      const numberOfComponents = readUInt(block, 32, 4, isBigEndian);\n      if (numberOfComponents !== 1) {\n        return;\n      }\n      return readUInt(block, 16, 8, isBigEndian);\n    }\n  }\n}\nfunction validateExifBlock(buffer, index) {\n  const exifBlock = buffer.slice(APP1_DATA_SIZE_BYTES, index);\n  const byteAlign = exifBlock.toString(\"hex\", EXIF_HEADER_BYTES, EXIF_HEADER_BYTES + TIFF_BYTE_ALIGN_BYTES);\n  const isBigEndian = byteAlign === BIG_ENDIAN_BYTE_ALIGN;\n  const isLittleEndian = byteAlign === LITTLE_ENDIAN_BYTE_ALIGN;\n  if (isBigEndian || isLittleEndian) {\n    return extractOrientation(exifBlock, isBigEndian);\n  }\n}\nfunction validateBuffer(buffer, index) {\n  if (index > buffer.length) {\n    throw new TypeError(\"Corrupt JPG, exceeded buffer limits\");\n  }\n  if (buffer[index] !== 255) {\n    throw new TypeError(\"Invalid JPG, marker table corrupted\");\n  }\n}\nconst JPG = {\n  validate(buffer) {\n    const SOIMarker = buffer.toString(\"hex\", 0, 2);\n    return SOIMarker === \"ffd8\";\n  },\n  calculate(buffer) {\n    buffer = buffer.slice(4);\n    let orientation;\n    let next;\n    while (buffer.length) {\n      const i = buffer.readUInt16BE(0);\n      if (isEXIF(buffer)) {\n        orientation = validateExifBlock(buffer, i);\n      }\n      validateBuffer(buffer, i);\n      next = buffer[i + 1];\n      if (next === 192 || next === 193 || next === 194) {\n        const size = extractSize(buffer, i + 5);\n        if (!orientation) {\n          return size;\n        }\n        return {\n          height: size.height,\n          orientation,\n          width: size.width\n        };\n      }\n      buffer = buffer.slice(i + 2);\n    }\n    throw new TypeError(\"Invalid JPG, no size found\");\n  }\n};\n\nconst SIGNATURE = \"KTX 11\";\nconst KTX = {\n  validate(buffer) {\n    return SIGNATURE === buffer.toString(\"ascii\", 1, 7);\n  },\n  calculate(buffer) {\n    return {\n      height: buffer.readUInt32LE(40),\n      width: buffer.readUInt32LE(36)\n    };\n  }\n};\n\nconst pngSignature = \"PNG\\r\\n\u001a\\n\";\nconst pngImageHeaderChunkName = \"IHDR\";\nconst pngFriedChunkName = \"CgBI\";\nconst PNG = {\n  validate(buffer) {\n    if (pngSignature === buffer.toString(\"ascii\", 1, 8)) {\n      let chunkName = buffer.toString(\"ascii\", 12, 16);\n      if (chunkName === pngFriedChunkName) {\n        chunkName = buffer.toString(\"ascii\", 28, 32);\n      }\n      if (chunkName !== pngImageHeaderChunkName) {\n        throw new TypeError(\"Invalid PNG\");\n      }\n      return true;\n    }\n    return false;\n  },\n  calculate(buffer) {\n    if (buffer.toString(\"ascii\", 12, 16) === pngFriedChunkName) {\n      return {\n        height: buffer.readUInt32BE(36),\n        width: buffer.readUInt32BE(32)\n      };\n    }\n    return {\n      height: buffer.readUInt32BE(20),\n      width: buffer.readUInt32BE(16)\n    };\n  }\n};\n\nconst PNMTypes = {\n  P1: \"pbm/ascii\",\n  P2: \"pgm/ascii\",\n  P3: \"ppm/ascii\",\n  P4: \"pbm\",\n  P5: \"pgm\",\n  P6: \"ppm\",\n  P7: \"pam\",\n  PF: \"pfm\"\n};\nconst Signatures = Object.keys(PNMTypes);\nconst handlers = {\n  default: (lines) => {\n    let dimensions = [];\n    while (lines.length > 0) {\n      const line = lines.shift();\n      if (line[0] === \"#\") {\n        continue;\n      }\n      dimensions = line.split(\" \");\n      break;\n    }\n    if (dimensions.length === 2) {\n      return {\n        height: parseInt(dimensions[1], 10),\n        width: parseInt(dimensions[0], 10)\n      };\n    } else {\n      throw new TypeError(\"Invalid PNM\");\n    }\n  },\n  pam: (lines) => {\n    const size = {};\n    while (lines.length > 0) {\n      const line = lines.shift();\n      if (line.length > 16 || line.charCodeAt(0) > 128) {\n        continue;\n      }\n      const [key, value] = line.split(\" \");\n      if (key && value) {\n        size[key.toLowerCase()] = parseInt(value, 10);\n      }\n      if (size.height && size.width) {\n        break;\n      }\n    }\n    if (size.height && size.width) {\n      return {\n        height: size.height,\n        width: size.width\n      };\n    } else {\n      throw new TypeError(\"Invalid PAM\");\n    }\n  }\n};\nconst PNM = {\n  validate(buffer) {\n    const signature = buffer.toString(\"ascii\", 0, 2);\n    return Signatures.includes(signature);\n  },\n  calculate(buffer) {\n    const signature = buffer.toString(\"ascii\", 0, 2);\n    const type = PNMTypes[signature];\n    const lines = buffer.toString(\"ascii\", 3).split(/[\\r\\n]+/);\n    const handler = handlers[type] || handlers.default;\n    return handler(lines);\n  }\n};\n\nconst PSD = {\n  validate(buffer) {\n    return buffer.toString(\"ascii\", 0, 4) === \"8BPS\";\n  },\n  calculate(buffer) {\n    return {\n      height: buffer.readUInt32BE(14),\n      width: buffer.readUInt32BE(18)\n    };\n  }\n};\n\nconst svgReg = /<svg\\s([^>\"']|\"[^\"]*\"|'[^']*')*>/;\nconst extractorRegExps = {\n  height: /\\sheight=(['\"])([^%]+?)\\1/,\n  root: svgReg,\n  viewbox: /\\sviewBox=(['\"])(.+?)\\1/,\n  width: /\\swidth=(['\"])([^%]+?)\\1/\n};\nconst INCH_CM = 2.54;\nconst units = {\n  cm: 96 / INCH_CM,\n  em: 16,\n  ex: 8,\n  m: 96 / INCH_CM * 100,\n  mm: 96 / INCH_CM / 10,\n  pc: 96 / 72 / 12,\n  pt: 96 / 72\n};\nfunction parseLength(len) {\n  const m = /([0-9.]+)([a-z]*)/.exec(len);\n  if (!m) {\n    return void 0;\n  }\n  return Math.round(parseFloat(m[1]) * (units[m[2]] || 1));\n}\nfunction parseViewbox(viewbox) {\n  const bounds = viewbox.split(\" \");\n  return {\n    height: parseLength(bounds[3]),\n    width: parseLength(bounds[2])\n  };\n}\nfunction parseAttributes(root) {\n  const width = root.match(extractorRegExps.width);\n  const height = root.match(extractorRegExps.height);\n  const viewbox = root.match(extractorRegExps.viewbox);\n  return {\n    height: height && parseLength(height[2]),\n    viewbox: viewbox && parseViewbox(viewbox[2]),\n    width: width && parseLength(width[2])\n  };\n}\nfunction calculateByDimensions(attrs) {\n  return {\n    height: attrs.height,\n    width: attrs.width\n  };\n}\nfunction calculateByViewbox(attrs, viewbox) {\n  const ratio = viewbox.width / viewbox.height;\n  if (attrs.width) {\n    return {\n      height: Math.floor(attrs.width / ratio),\n      width: attrs.width\n    };\n  }\n  if (attrs.height) {\n    return {\n      height: attrs.height,\n      width: Math.floor(attrs.height * ratio)\n    };\n  }\n  return {\n    height: viewbox.height,\n    width: viewbox.width\n  };\n}\nconst SVG = {\n  validate(buffer) {\n    const str = String(buffer);\n    return svgReg.test(str);\n  },\n  calculate(buffer) {\n    const root = buffer.toString(\"utf8\").match(extractorRegExps.root);\n    if (root) {\n      const attrs = parseAttributes(root[0]);\n      if (attrs.width && attrs.height) {\n        return calculateByDimensions(attrs);\n      }\n      if (attrs.viewbox) {\n        return calculateByViewbox(attrs, attrs.viewbox);\n      }\n    }\n    throw new TypeError(\"Invalid SVG\");\n  }\n};\n\nfunction calculateExtended(buffer) {\n  return {\n    height: 1 + buffer.readUIntLE(7, 3),\n    width: 1 + buffer.readUIntLE(4, 3)\n  };\n}\nfunction calculateLossless(buffer) {\n  return {\n    height: 1 + ((buffer[4] & 15) << 10 | buffer[3] << 2 | (buffer[2] & 192) >> 6),\n    width: 1 + ((buffer[2] & 63) << 8 | buffer[1])\n  };\n}\nfunction calculateLossy(buffer) {\n  return {\n    height: buffer.readInt16LE(8) & 16383,\n    width: buffer.readInt16LE(6) & 16383\n  };\n}\nconst WEBP = {\n  validate(buffer) {\n    const riffHeader = buffer.toString(\"ascii\", 0, 4) === \"RIFF\";\n    const webpHeader = buffer.toString(\"ascii\", 8, 12) === \"WEBP\";\n    const vp8Header = buffer.toString(\"ascii\", 12, 15) === \"VP8\";\n    return riffHeader && webpHeader && vp8Header;\n  },\n  calculate(buffer) {\n    const chunkHeader = buffer.toString(\"ascii\", 12, 16);\n    buffer = buffer.slice(20, 30);\n    if (chunkHeader === \"VP8X\") {\n      const extendedHeader = buffer[0];\n      const validStart = (extendedHeader & 192) === 0;\n      const validEnd = (extendedHeader & 1) === 0;\n      if (validStart && validEnd) {\n        return calculateExtended(buffer);\n      } else {\n        throw new TypeError(\"Invalid WebP\");\n      }\n    }\n    if (chunkHeader === \"VP8 \" && buffer[0] !== 47) {\n      return calculateLossy(buffer);\n    }\n    const signature = buffer.toString(\"hex\", 3, 6);\n    if (chunkHeader === \"VP8L\" && signature !== \"9d012a\") {\n      return calculateLossless(buffer);\n    }\n    throw new TypeError(\"Invalid WebP\");\n  }\n};\n\nconst typeHandlers = {\n  bmp: BMP,\n  cur: CUR,\n  dds: DDS,\n  gif: GIF,\n  icns: ICNS,\n  ico: ICO,\n  j2c: J2C,\n  jp2: JP2,\n  jpg: JPG,\n  ktx: KTX,\n  png: PNG,\n  pnm: PNM,\n  psd: PSD,\n  svg: SVG,\n  webp: WEBP\n};\nconst getMimeType = (type) => {\n  if (type === \"svg\") {\n    return \"image/svg+xml\";\n  }\n  return `image/${type}`;\n};\n\nconst keys = Object.keys(typeHandlers);\nconst firstBytes = {\n  56: \"psd\",\n  66: \"bmp\",\n  68: \"dds\",\n  71: \"gif\",\n  73: \"tiff\",\n  77: \"tiff\",\n  82: \"webp\",\n  105: \"icns\",\n  137: \"png\",\n  255: \"jpg\"\n};\nfunction detector(buffer) {\n  const byte = buffer[0];\n  if (byte in firstBytes) {\n    const type = firstBytes[byte];\n    if (typeHandlers[type].validate(buffer)) {\n      return type;\n    }\n  }\n  const finder = (key) => typeHandlers[key].validate(buffer);\n  return keys.find(finder);\n}\n\nfunction lookup(buffer, filepath) {\n  const type = detector(buffer);\n  if (type && type in typeHandlers) {\n    const size = typeHandlers[type].calculate(buffer, filepath);\n    if (size !== void 0) {\n      size.type = type;\n      size.mimeType = getMimeType(type);\n      return size;\n    }\n  }\n  throw new TypeError(\"unsupported file type: \" + type + \" (file: \" + filepath + \")\");\n}\nfunction imageMeta(input) {\n  if (Buffer.isBuffer(input)) {\n    return lookup(input);\n  }\n  throw new Error(\"Input should be buffer!\");\n}\nconst types = Object.keys(typeHandlers);\n\nexports.imageMeta = imageMeta;\nexports.types = types;\n"],"sourceRoot":""}